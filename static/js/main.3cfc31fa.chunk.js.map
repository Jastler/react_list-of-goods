{"version":3,"sources":["components/GoodsList.jsx","components/ButtonStart.jsx","components/ButtonReverse.jsx","components/ButtonSortAlphabetically.jsx","components/ButtonReset.jsx","components/ButtonSortByLength.jsx","App.js","index.js"],"names":["GoodsList","props","showList","goods","isReversed","sortBy","goodsCopy","sort","word1","word2","localeCompare","product","length","reverse","map","element","key","id","ButtonStart","showGoods","showButtons","type","onClick","ButtonReverse","ButtonSortAlphabetically","sortByName","ButtonReset","reset","ButtonSortByLength","sortByLength","goodsFromServer","goodsWithID","index","App","state","setState","this","className","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cfc31fa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function GoodsList(props) {\n  const {\n    showList,\n    goods,\n    isReversed,\n    sortBy,\n  } = props;\n\n  const goodsCopy = [...goods];\n\n  goodsCopy.sort((word1, word2) => {\n    switch (sortBy) {\n      case 'id':\n        return word1[sortBy] - word2[sortBy];\n      case 'product':\n        return word1[sortBy].localeCompare(word2[sortBy]);\n      case 'length':\n        return word1.product.length - word2.product.length;\n      default:\n        return null;\n    }\n  });\n\n  if (isReversed) {\n    goodsCopy.reverse();\n  }\n\n  return (\n    <>\n      {showList\n      && (\n        <ul>\n          {goodsCopy.map(element => (\n            <li key={element.id}>\n              {element.product}\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n\nGoodsList.propTypes = {\n  showList: PropTypes.bool.isRequired,\n  goods: PropTypes.arrayOf(\n    PropTypes.string,\n  ).isRequired,\n  isReversed: PropTypes.bool.isRequired,\n  sortBy: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function ButtonStart({ showGoods, showButtons }) {\n  return (\n    <>\n      {showButtons && (\n        <button\n          type=\"button\"\n          onClick={showGoods}\n        >\n          Start\n        </button>\n      )}\n    </>\n  );\n}\n\nButtonStart.propTypes = {\n  showGoods: PropTypes.func.isRequired,\n  showButtons: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function ButtonReverse({ reverse, showButtons }) {\n  return (\n    <>\n      {!showButtons && (\n        <button\n          type=\"button\"\n          onClick={reverse}\n        >\n          Reverse\n        </button>\n      )}\n    </>\n  );\n}\n\nButtonReverse.propTypes = {\n  reverse: PropTypes.func.isRequired,\n  showButtons: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function ButtonSortAlphabetically({ sortByName, showButtons }) {\n  return (\n    <>\n      {!showButtons && (\n        <button\n          type=\"button\"\n          onClick={sortByName}\n        >\n          Sort alphabetically\n        </button>\n      )}\n    </>\n  );\n}\n\nButtonSortAlphabetically.propTypes = {\n  sortByName: PropTypes.func.isRequired,\n  showButtons: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function ButtonReset({ reset, showButtons }) {\n  return (\n    <>\n      {!showButtons && (\n        <button\n          type=\"button\"\n          onClick={reset}\n        >\n          Reset\n        </button>\n      )}\n    </>\n  );\n}\n\nButtonReset.propTypes = {\n  reset: PropTypes.func.isRequired,\n  showButtons: PropTypes.bool.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport function ButtonSortByLength({ sortByLength, showButtons }) {\n  return (\n    <>\n      {!showButtons && (\n        <button\n          type=\"button\"\n          onClick={sortByLength}\n        >\n          Sort by length\n        </button>\n      )}\n    </>\n  );\n}\n\nButtonSortByLength.propTypes = {\n  sortByLength: PropTypes.func.isRequired,\n  showButtons: PropTypes.bool.isRequired,\n};\n","import React from 'react';\n\nimport { GoodsList } from './components/GoodsList';\nimport { ButtonStart } from './components/ButtonStart';\nimport './App.css';\nimport { ButtonReverse } from './components/ButtonReverse';\n// eslint-disable-next-line max-len\nimport { ButtonSortAlphabetically } from './components/ButtonSortAlphabetically';\nimport { ButtonReset } from './components/ButtonReset';\nimport { ButtonSortByLength } from './components/ButtonSortByLength';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst goodsWithID = goodsFromServer.map((product, index) => ({\n  product,\n  id: index + 1,\n}));\n\nexport class App extends React.Component {\n  state = {\n    showList: false,\n    showButtons: true,\n    isReversed: false,\n    sortBy: 'id',\n  }\n\n  showGoods = () => (\n    this.setState(state => ({\n      showList: true,\n      showButtons: false,\n    }))\n  );\n\n  reverse = () => (\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }))\n  );\n\n  sortByName = () => {\n    this.setState({ sortBy: 'product' });\n  }\n\n  sortByLength = () => {\n    this.setState({ sortBy: 'length' });\n  }\n\n  reset = () => {\n    this.setState({\n      sortBy: 'id',\n      isReversed: false,\n    });\n  }\n\n  render() {\n    const {\n      showList,\n      showButtons,\n      isReversed,\n      sortBy,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>Goods</h1>\n        <ButtonStart\n          showGoods={this.showGoods}\n          showButtons={showButtons}\n        />\n        <ButtonReverse\n          reverse={this.reverse}\n          showButtons={showButtons}\n        />\n        <ButtonSortAlphabetically\n          sortByName={this.sortByName}\n          showButtons={showButtons}\n        />\n        <ButtonReset\n          reset={this.reset}\n          showButtons={showButtons}\n        />\n        <ButtonSortByLength\n          sortByLength={this.sortByLength}\n          showButtons={showButtons}\n        />\n        <GoodsList\n          showList={showList}\n          goods={goodsWithID}\n          isReversed={isReversed}\n          sortBy={sortBy}\n        />\n        {goodsFromServer.length}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}